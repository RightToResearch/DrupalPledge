<?php

module_load_include('inc', 'pledge', 'autocomplete');

/**
* Implements hook_views_api().
*/
function pledge_views_api() {
  return array('api' => 3.0);
}

/**
* Implements hook_views_default_views().
*/
function pledge_views_default_views() {
  module_load_include('inc', 'pledge', 'views');
  $views = array();
  $views['signatories'] = pledge_views_signatories();
  return $views; 
}

/**
* Implements hook_ctools_plugin_api().
*/
function pledge_ctools_plugin_api($module, $api) {
  if ($module == 'page_manager' && $api == 'pages_default') {
    return array('version' => 1);
  }
}

/**
* Implements hook_default_page_manager_pages().
*/
function pledge_default_page_manager_pages() {
  module_load_include('inc', 'pledge', 'pages');
  $pages = array();
  $pages['home'] = pledge_pages_home();
  return $pages;
}

/**
* Implements hook_menu().
*/
function pledge_menu() {
  $items = array();
  $items['admin/config/content/pledge'] = array(
    'title' => 'Pledge Settings',
    'description' => 'Change the pledge text and other pledge settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('pledge_admin'),
    'access arguments' => array('access administration pages'),
    'type' => MENU_NORMAL_ITEM,
  );
  $items['pledge/autocomplete/institution'] = array(
    'title' => t('Autocomplete institution'),
    'page callback' => 'pledge_autocomplete_institution',
    'page arguments' => array(3),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );
  $items['pledge/autocomplete/discipline'] = array(
    'title' => t('Autocomplete discipline'),
    'page callback' => 'pledge_autocomplete_discipline',
    'page arguments' => array(3),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );
  return $items;
}

/**
* Implements hook_block_info().
*/
function pledge_block_info() {
  $blocks = array();

  $blocks['sign-pledge'] = array(
    'info' => t('Sign the Pledge'),
  );
  $blocks['signin-pledge'] = array(
    'info' => t('Pledge signin'),
  );
  $blocks['text-pledge'] = array(
    'info' => t('Text of the pledge'),
  );

  return $blocks;
}

/**
* Implements hook_block_view().
*/
function pledge_block_view($delta = '') {
  module_load_include('inc', 'pledge', 'blocks');
  $block = array();
  switch ($delta) {
    case 'sign-pledge':
      if (user_is_anonymous()) {  
        $block['subject'] = 'Sign the Pledge';
        $block['content'] = pledge_sign_pledge_block();
      } else {
        $block['subject'] = 'Thanks for signing.';
        $block['content'] = pledge_signed_block();
      }
      break;
    case 'signin-pledge':
      $block['subject'] = '';
      $block['content'] = '';
      if(user_is_anonymous()) {
        $block['content'] = pledge_signin_block();
      }
      break;
    case 'text-pledge':
      $block['subject'] = '';
      $block['content'] = pledge_text_pledge_block();
      break;
  }
  return $block;
}

function pledge_admin($form, &$form_state) {
  module_load_include('inc', 'pledge', 'forms');
  return system_settings_form(pledge_admin_form($form, $form_sate));
}
