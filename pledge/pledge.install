<?php
/**
 * pledge: pledge.install
 * ======================
 *
 * Handles installation and updates to the pledge module.
 */

/**
 * Implements hook_install()
 */
function pledge_install() {
  //Set the <front> page to be our panels page
  variable_set('site_frontpage', 'home');

  //Throw in some default text
  variable_set('pledge_pledgetext', 'Visit the Pledge settings page to change your pledge text.');
  variable_set('pledge_signed', 'Thanks for signing!');
  variable_set('pledge_supporttitle', 'We\'re here to help...');
  variable_set('pledge_heretohelp', 'We have several ways of helping you!');

  //Add fields to the user bundle
  pledge_install_user_fields();

  //We use views and contexts to provide user pages, hide all fields
  pledge_install_user_fields_display();

  //Create new node types
  pledge_install_node_types();
  variable_set('comment_support_page', 0);

  //Create Full HTML filter
  pledge_install_filters();

  //Create new roles
  pledge_install_roles();

  //Set role permissions
  pledge_install_permissions();


  //Place the sign in block in the header region
  $block = array(
    'module' => 'pledge',
    'delta' => 'signin-pledge',
    'theme' => 'bartik',
    'visibility' => 0,
    'region' => 'header',
    'status' => 1,
    'pages' => '',
    );
  drupal_write_record('block', $block);

  //Enable user pictures so Gravatar integration works out of the box
  variable_set('user_pictures', 1);

  //Allow visitors to register their own accounts
  variable_set('user_register', 1);
}

/**
 * Function to add fields (defined in user_fields.inc) to the user bundle
 */
function pledge_install_user_fields() {
  module_load_include('inc', 'pledge', 'user_fields');
  $fields = pledge_user_fields();
  foreach ($fields as $field) {
    if (!field_info_field($field['field_name'])) {
      $new = array(
        'field_name' => $field['field_name'],
        'type' => $field['type'],
        'settings' => $field['settings']
      );
    field_create_field($new);
    $instance = array(
        'field_name' => $field['field_name'],
        'entity_type' => 'user',
        'label' => $field['label'],
        'bundle' => 'user',
        'required' => (isset($field['settings']['required']) ? $field['settings']['required']: FALSE),
        'widget' => $field['widget'],
        'settings' => array(
          'user_register_form' => $field['settings']['user_register_form'],
        ),
    );
    field_create_instance($instance);
    }
  }
}


/**
 * Implements hook_schema().
 */
function pledge_schema() {
  $schema = array();

  //pledge_tasks enables monitoring of progress through the site
  $schema['pledge_tasks'] = array(
    'description' => 'Tracks completed tasks by a user',
    'fields' => array(
      'uid' => array(
        'description' => 'User uid',
        'type' => 'int',
        'size' => 'normal',
      ),
      'type' => array(
        'description' => 'The type of task completed, e.g.: node, module',
        'type' => 'varchar',
        'length' => 255,
      ),
      'type_id' => array(
        'description' => 'Unique identifier of type of type',
        'type' => 'int',
        'size' => 'normal',
      ),
    ),
    'primary key' => array(
      'uid',
      'type',
      'type_id',
    ),
  );

  return $schema;
}

/**
 * Create custom content (node) types
 */
function pledge_install_node_types() {
  //Support articles
  $type = array(
    'type' => 'support_page',
    'name' => 'Support Page',
    'description' => 'Pledge support articles',
    'base' => 'node_content',
    'custom' => FALSE,
    'locked' => TRUE,
    'has_title' => TRUE,
    'title_label' => 'Title',
    'module' => 'pledge',
  );
  $type = node_type_set_defaults($type);
  node_type_save($type);
  node_add_body_field($type);
}

/** 
 * Create new user roles
 */
function pledge_install_roles() {
  //Create the Mentor role
  $role = new stdClass();
  $role->name = 'Mentor';
  user_role_save($role);

  //Create the Content Manager role
  $role = new stdClass();
  $role->name = 'Content Manager';
  user_role_save($role);
}

/**
 * Define a Full HTML filter to allow people (Content Managers) to enter HTML
 */
function pledge_install_filters() {
  //Check if Full HTML filter already exists
  $format_exists = (bool) db_query_range('SELECT 1 FROM {filter_format} WHERE name = :name', 0, 1, array(':name' => 'Full HTML'))->fetchField();
  if (!$format_exists) {
    $format = array(
      'format' => 'full_html',
      'name' => 'Full HTML',
      'weight' => 9,
      'filters' => array(
        'filter_htmlcorrector' => array(
          'weight' => 0,
          'status' => 1,
        ),
        'filter_url' => array(
          'weight' => 1,
          'status' => 1,
        ),
      ),
    );
    $format = (object) $format;
    filter_format_save($format);
  }
}

/**
 *  Assign the default pledge permissions
 */
function pledge_install_permissions() {
  $roles = array(
    'Content Manager' => array(
      'use text format full_html',
    ),
    'authenticated user' => array(
      'access user profiles',
      'use gravatar',
      'access user contact forms',
    ),
    'anonymous user' => array(
      'access user profiles',
      'use gravatar',
      'access site-wide contact form',
    ),
  );

  foreach ($roles as $role => $perms) {
    $role = user_role_load_by_name($role);
    user_role_grant_permissions($role->rid, $perms);
  }
}

/**
 * We build a custom user page using Views and Contexts - so hide the defaults
 */
function pledge_install_user_fields_display() {
  //Build a liist of fields of hide
  module_load_include('inc', 'pledge', 'user_fields');
  $fields   = array_keys(pledge_user_fields());

  foreach ($fields as $field_name) {
    $instance_info = field_info_instance('user', $field_name, 'user');
    $instance_info['display']['default']['type'] = 'hidden'; //hide the field
    field_update_instance($instance_info);
  }
}
